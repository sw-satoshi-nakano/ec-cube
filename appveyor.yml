# appveyor file
# http://www.appveyor.com/docs/appveyor-yml

# Set build version format here instead of in the admin panel.
<<<<<<< HEAD
version: 3.x-{build}
=======
version: 4.0.x-{build}
>>>>>>> 2c09ba75d7b7fba1a3b27dbc46b98417f7fffe0d

clone_folder: c:\projects\ec-cube

cache:
  - '%LOCALAPPDATA%\Composer\files'
  - vendor
<<<<<<< HEAD
=======
  - bin\.phpunit
>>>>>>> 2c09ba75d7b7fba1a3b27dbc46b98417f7fffe0d

# Fix line endings in Windows. (runs before repo cloning)
init:
  - git config --global core.autocrlf input

environment:
  global:
<<<<<<< HEAD
    USER: "root"
    DBNAME: "myapp_test"
    DBPASS: "Password12!"
    DBUSER: "root"
=======
    DATABASE_URL: "mysql://root:Password12!@localhost/myapp_test"
    DATABASE_SERVER_VERSION: "5"
>>>>>>> 2c09ba75d7b7fba1a3b27dbc46b98417f7fffe0d
    BASE_DIR: "C:/projects/ec-cube"

  matrix:
  - db: mysql
    provider: mysql

services:
  - mysql

# Install scripts. (runs after repo cloning)
install:
<<<<<<< HEAD
  - cp phpunit.xml.dist phpunit.xml
  # see https://github.com/phpmd/phpmd/blob/master/appveyor.yml#L10-L13
  - cinst -y OpenSSL.Light
=======
  # see https://github.com/phpmd/phpmd/blob/master/appveyor.yml#L10-L13
  - cinst -y OpenSSL.Light --version 1.1.1
>>>>>>> 2c09ba75d7b7fba1a3b27dbc46b98417f7fffe0d
  - SET PATH=C:\Program Files\OpenSSL;%PATH%
  - sc config wuauserv start= auto
  - net start wuauserv
  # Set MySQL.
  - cp tests/my.cnf c:\
  - SET PATH=C:\Program Files\MySql\MySQL Server 5.7\bin\;%PATH%
  #- cinst mysql
  #- SET PATH=C:\tools\mysql\current\bin\;%PATH%
  # Set PHP.
<<<<<<< HEAD
  - cinst php --version 7.1.20 --allow-empty-checksums
  - SET PATH=C:\tools\php71\;%PATH%
  - copy C:\tools\php71\php.ini-production C:\tools\php71\php.ini
  - echo date.timezone="Asia/Tokyo" >> C:\tools\php71\php.ini
  - echo extension_dir=ext >> C:\tools\php71\php.ini
  - echo extension=php_openssl.dll >> C:\tools\php71\php.ini
  - echo extension=php_gd2.dll >> C:\tools\php71\php.ini
  - echo extension=php_mbstring.dll >> C:\tools\php71\php.ini
  - echo extension=php_pgsql.dll >> C:\tools\php71\php.ini
  - echo extension=php_pdo_mysql.dll >> C:\tools\php71\php.ini
  - echo extension=php_pdo_pgsql.dll >> C:\tools\php71\php.ini
  - echo extension=php_curl.dll >> C:\tools\php71\php.ini
  - echo extension=php_fileinfo.dll >> C:\tools\php71\php.ini
  - echo memory_limit = 512M >> C:\tools\php71\php.ini
=======
  - cinst php --version 7.2.10 --allow-empty-checksums
  - SET PATH=C:\tools\php72\;%PATH%
  - copy C:\tools\php72\php.ini-production C:\tools\php72\php.ini
  - echo date.timezone="Asia/Tokyo" >> C:\tools\php72\php.ini
  - echo extension_dir=ext >> C:\tools\php72\php.ini
  - echo extension=php_gd2.dll >> C:\tools\php72\php.ini
  - echo extension=php_mbstring.dll >> C:\tools\php72\php.ini
  - echo extension=php_pgsql.dll >> C:\tools\php72\php.ini
  - echo extension=php_pdo_mysql.dll >> C:\tools\php72\php.ini
  - echo extension=php_pdo_pgsql.dll >> C:\tools\php72\php.ini
  - echo extension=php_curl.dll >> C:\tools\php72\php.ini
  - echo extension=php_fileinfo.dll >> C:\tools\php72\php.ini
  - echo extension=php_intl.dll >> C:\tools\php72\php.ini
  - echo extension=php_openssl.dll >> C:\tools\php72\php.ini
  - echo memory_limit = 512M >> C:\tools\php72\php.ini
  - echo APP_ENV=codeception >> .env
>>>>>>> 2c09ba75d7b7fba1a3b27dbc46b98417f7fffe0d
  - php -r "readfile('http://getcomposer.org/installer');" | php
  - php composer.phar install --dev --no-interaction -o

# Don't actually build.
build: off

before_test:
  - php bin\console doctrine:database:create
  - php bin\console doctrine:schema:create
  - php bin\console eccube:fixtures:load

test_script:
<<<<<<< HEAD
  - vendor\bin\phpunit.bat -c phpunit.xml
=======
  - php bin\phpunit --exclude-group cache-clear
>>>>>>> 2c09ba75d7b7fba1a3b27dbc46b98417f7fffe0d
